services:
  - type: web
    name: dklautomatie-backend
    runtime: docker
    dockerfilePath: ./Dockerfile
    envVars:
      - key: ADMIN_EMAIL
        sync: false
      - key: SMTP_HOST
        sync: false
      - key: SMTP_PORT
        sync: false
      - key: SMTP_USER
        sync: false
      - key: SMTP_PASSWORD
        sync: false
      - key: ALLOWED_ORIGINS
        sync: false
      - key: SMTP_FROM
        sync: false
      - key: APP_ENV
        value: prod
        sync: false
      # Registratie SMTP configuratie
      - key: REGISTRATION_SMTP_HOST
        sync: false
      - key: REGISTRATION_SMTP_PORT
        sync: false
      - key: REGISTRATION_SMTP_USER
        sync: false
      - key: REGISTRATION_SMTP_PASSWORD
        sync: false
      - key: REGISTRATION_SMTP_FROM
        sync: false
      - key: REGISTRATION_EMAIL
        sync: false
      # Database configuratie
      - key: DB_HOST
        fromService:
          name: dklautomatie-db
          type: pserv
          property: host
      - key: DB_PORT
        fromService:
          name: dklautomatie-db
          type: pserv
          property: port
      - key: DB_USER
        fromService:
          name: dklautomatie-db
          type: pserv
          property: user
      - key: DB_PASSWORD
        fromService:
          name: dklautomatie-db
          type: pserv
          property: password
      - key: DB_NAME
        fromService:
          name: dklautomatie-db
          type: pserv
          property: database
      - key: DB_SSL_MODE
        value: require
    healthCheckPath: /api/health
    buildCommand: |
      chmod +x start.sh
      docker build -t dklautomatie-backend .
    startCommand: ./start.sh
    
  - type: pserv
    name: dklautomatie-db
    engine: postgres
    version: 14
    ipAllowList: []
    plan: free
    autoDeploy: true
    envVars:
      - key: POSTGRES_USER
        generateValue: true
      - key: POSTGRES_PASSWORD
        generateValue: true
      - key: POSTGRES_DB
        value: dklemailservice 